{"version":3,"sources":["styles/global.js","components/Header/styles.js","components/Header/index.js","services/api.js","util/format.js","store/modules/cart/actions.js","pages/Home/styles.js","pages/Home/index.js","pages/Cart/styles.js","pages/Cart/index.js","routes.js","services/history.js","store/modules/rootReducer.js","store/modules/cart/reducer.js","store/modules/cart/sagas.js","store/modules/rootSaga.js","store/index.js","App.js","index.js","assets/images/background.svg","assets/images/logo.svg"],"names":["createGlobalStyle","background","Container","styled","header","Cart","Link","connect","state","cart","cartSize","length","props","to","src","logo","alt","size","color","api","axios","create","baseURL","formatPrice","Intl","NumberFormat","style","currency","format","addToCartRequest","id","type","addToCartSucess","product","removeFromCart","updateAmountRequest","amount","updateAmountSuccess","ProductList","ul","darken","Home","products","handleAddProduct","get","response","data","map","priceFormatted","price","this","setState","console","log","key","image","title","onClick","Component","reduce","dispatch","bindActionCreators","CartActions","div","ProductTable","table","Total","subtotal","total","decrement","readOnly","value","increment","Routes","path","exact","component","history","createBrowserHistory","combineReducers","action","produce","draft","push","productIndex","findIndex","p","splice","Number","addToCart","updateAmount","select","find","productExists","call","stock","stockAmount","currentAmount","toast","error","success","put","all","takeLatest","rootSaga","sagaMiddleware","createSagaMiddleware","sagaMonitor","enhancer","applyMiddleware","store","createStore","rootReducer","run","App","autoClose","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.74f9022e.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport background from '../assets/images/background.svg';\r\n\r\n\r\nexport default createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\r\n\r\n*{ \r\n  margin: 0;\r\n  padding: 0;\r\n  outline: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody{\r\n  background: #191920 url(${background}) no-repeat center top;\r\n  -webkit-font-smoothing: antialiased;\r\n}\r\n\r\nbody, input, button{\r\n  font: 14px sans-serif;\r\n}\r\n\r\n#root {\r\n  max-width: 1020px;\r\n  margin: 0 auto;\r\n  padding: 0 20px 50px;\r\n}\r\n\r\nbutton{\r\n  cursor: pointer\r\n}\r\n`;","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Container = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 50px 0;\r\n\r\n`;\r\n\r\nexport const Cart = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  transition: opacity 0.2s;\r\n\r\n  &:hover{\r\n    opacity: 0.7;\r\n  }\r\n\r\n  div{\r\n    text-align: right;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  strong{\r\n    display: block;\r\n    color: #FFF;\r\n  }\r\n\r\n  span{\r\n    font-size: 12px;\r\n    color: #999;\r\n  }\r\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { MdShoppingBasket } from 'react-icons/md';\r\n\r\nimport { Container, Cart } from './styles';\r\n\r\nimport logo from '../../assets/images/logo.svg';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <Container>\r\n      <Link to=\"/\">\r\n        <img src={logo} alt=\"Rocketshoes\" />\r\n      </Link>\r\n\r\n      <Cart to=\"/cart\">\r\n        <div>\r\n          <strong>Meu Carrinho</strong>\r\n          <span>{props.cartSize}</span>\r\n        </div>\r\n        <MdShoppingBasket size={36} color=\"#FFF\" />\r\n      </Cart>\r\n\r\n    </Container>\r\n  )\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cart: state.cart,\r\n  cartSize: state.cart.length\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3333',\r\n});\r\n\r\nexport default api;","export const {format: formatPrice} = new Intl.NumberFormat('pt-BR', {\r\n  style: 'currency',\r\n  currency: 'BRL'\r\n});","export function addToCartRequest(id) {\r\n  return {\r\n    type: '@cart/ADD_REQUEST',\r\n    id,\r\n  };\r\n}\r\n\r\nexport function addToCartSucess(product) {\r\n  return {\r\n    type: '@cart/ADD_SUCCESS',\r\n    product,\r\n  };\r\n}\r\n\r\nexport function removeFromCart(id) {\r\n  return {\r\n    type: '@cart/REMOVE',\r\n    id,\r\n  }\r\n}\r\n\r\nexport function updateAmountRequest(id, amount){\r\n  return{\r\n    type: '@cart/UPDATE_AMOUNT_REQUEST',\r\n    id,\r\n    amount\r\n  }\r\n}\r\n\r\nexport function updateAmountSuccess(id, amount){\r\n  return{\r\n    type: '@cart/UPDATE_AMOUNT_SUCCESS',\r\n    id,\r\n    amount\r\n  }\r\n}","import styled from \"styled-components\";\r\nimport { darken } from 'polished';\r\n\r\nexport const ProductList = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 20px;\r\n  list-style: none;\r\n\r\n  li{\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: #FFF;\r\n    border-radius: 4px;\r\n    padding: 20px;\r\n\r\n    img{\r\n      align-self: center;\r\n      max-width: 250px;\r\n    }\r\n\r\n    > strong {\r\n      font-size: 16px;\r\n      line-height: 20px;\r\n      color: #333;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    > span{\r\n      font-size: 21px;\r\n      font-weight: bold;\r\n      margin: 5px 0 20px;\r\n\r\n    }\r\n\r\n    button{\r\n      background: #7159c1;\r\n      color: #FFF;\r\n      border: 0;\r\n      border-radius: 4px;\r\n      overflow: hidden;\r\n      margin-top: auto;\r\n\r\n      display: flex;\r\n      align-items: center;\r\n      transition: background 0.2s;\r\n\r\n      &:hover{\r\n        background: ${darken(0.03, '#7159c1')}\r\n      }\r\n\r\n      div {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 12px;\r\n        background: rgba(0, 0, 0, 0.1);\r\n\r\n        svg{\r\n          margin-right: 5px;\r\n        }\r\n      }\r\n\r\n      span{\r\n        flex: 1;\r\n        text-align: center;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`;","import React, { Component } from 'react';\r\nimport { MdAddShoppingCart } from 'react-icons/md';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport api from '../../services/api';\r\nimport { formatPrice} from '../../util/format';\r\nimport * as CartActions from '../../store/modules/cart/actions';\r\n\r\nimport { ProductList } from './styles';\r\n\r\nclass Home extends Component {\r\n\r\n  state = {\r\n    products: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const response = await api.get('products');\r\n\r\n    const data = response.data.map(product => ({\r\n      ...product, priceFormatted: formatPrice(product.price)\r\n    }))\r\n\r\n    this.setState({ products: data });\r\n\r\n  }\r\n\r\n  handleAddProduct = (id) =>{\r\n    const { addToCartRequest } = this.props;\r\n\r\n    addToCartRequest(id);\r\n  }\r\n\r\n  render() {\r\n\r\n    const products  = this.state.products;\r\n    const amount = this.props.amount;\r\n\r\n    console.log(products);\r\n\r\n    return (\r\n      <ProductList>\r\n        { products.map(product => (\r\n          <li key={product.id}>\r\n            <img \r\n              src={product.image}\r\n              alt={product.title} \r\n\r\n              />\r\n            <strong>{product.title}</strong>\r\n            <span>{product.priceFormatted}</span>\r\n            <button type=\"button\" \r\n            onClick={() => this.handleAddProduct(product.id)}>\r\n              <div>\r\n                <MdAddShoppingCart size={16} color=\"#FFF\" /> {amount[product.id] || 0}\r\n             </div>\r\n\r\n              <span>ADICIONAR AO CARRINHO</span>\r\n            </button>\r\n          </li>\r\n        )) };\r\n\r\n      </ProductList>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  amount: state.cart.reduce((amount, product)=> {\r\n    amount[product.id] = product.amount;\r\n    return amount;\r\n  }, {})\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => \r\nbindActionCreators(CartActions, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import styled from 'styled-components';\r\nimport { darken } from 'polished';\r\n\r\nexport const Container = styled.div`\r\n  padding: 30px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n\r\n  footer{\r\n    margin-top: 30px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    button{\r\n      background: #7159c1;\r\n      color: #fff;\r\n      border: 0;\r\n      border-radius: 4px;\r\n      padding: 12px 20px;\r\n      font-weight: bold;\r\n      text-transform: uppercase;\r\n      transition: background 0.2s;\r\n\r\n      &:hover{\r\n        background: ${darken(0.03, '#7159c1')};\r\n      }\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const ProductTable = styled.table`\r\n  width: 100%;\r\n\r\n  thead th{\r\n    color : #999;\r\n    text-align: left;\r\n    padding: 12px;\r\n  }\r\n  \r\n  tbody td{\r\n    padding: 12px;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n\r\n  img{\r\n    height: 100px\r\n  }\r\n\r\n  strong{\r\n    color: #333;\r\n    display: block;\r\n  }\r\n\r\n  span{\r\n    display: block;\r\n    margin-top: 5px;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  div{\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    input{\r\n      border: 1px solid #ddd;\r\n      border-radius: 4px;\r\n      color: #666;\r\n      padding: 6px;\r\n      width: 50px;\r\n\r\n    }\r\n  }\r\n\r\n  button{\r\n    background: none;\r\n    border: 0;\r\n    padding: 6px;\r\n  }\r\n`;\r\n\r\nexport const Total = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n\r\n  span{\r\n    color: #999;\r\n    font-weight: bold;\r\n  }\r\n\r\n  strong{\r\n    font-size: 28px;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { MdRemoveCircleOutline, MdAddCircleOutline, MdDelete } from 'react-icons/md';\r\n\r\nimport { formatPrice } from '../../util/format';\r\nimport * as CartActions from '../../store/modules/cart/actions';\r\n\r\nimport { Container, ProductTable, Total } from './styles';\r\n\r\nfunction Cart({ cart, removeFromCart, updateAmountRequest, total }) {\r\n\r\n  function increment(product){\r\n    updateAmountRequest(product.id, product.amount + 1);\r\n  }\r\n\r\n  function decrement(product){\r\n    updateAmountRequest(product.id, product.amount - 1);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <ProductTable>\r\n        <thead>\r\n          <tr>\r\n            <th />\r\n            <th>Produto</th>\r\n            <th>Quantidade</th>\r\n            <th>Subtotal</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cart.length === 0 ? <strong>Carrinho Vazio</strong> : cart.map(product => (\r\n            <tr key={product.id}>\r\n              <td>\r\n                <img src={product.image}\r\n                  alt={product.title} />\r\n              </td>\r\n              <td>\r\n                <strong>{product.title}</strong>\r\n                <span>{product.priceFormatted}</span>\r\n              </td>\r\n              <td>\r\n                <div>\r\n                  <button type=\"button\" onClick={() => decrement(product)}>\r\n                    <MdRemoveCircleOutline size={20} color=\"#7159c1\" />\r\n                  </button>\r\n                  <input readOnly value={product.amount} />\r\n                  <button type=\"button\" onClick={() => increment(product)} >\r\n                    <MdAddCircleOutline size={20} color=\"#7159c1\" />\r\n                  </button>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <strong>R${product.subtotal}</strong>\r\n              </td>\r\n              <td>\r\n                <button type=\"button\" onClick={() => \r\n                removeFromCart(product.id)}>\r\n                  <MdDelete size={20} color=\"#7159c1\" />\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          )\r\n          )}\r\n        </tbody>\r\n\r\n      </ProductTable>\r\n\r\n      <footer>\r\n      {cart.length === 0 ? null \r\n      :  <button type=\"button\">Finalizar pedido</button> }\r\n       \r\n\r\n        <Total>\r\n          <span>TOTAL</span>\r\n          <strong>{total}</strong>\r\n        </Total>\r\n      </footer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cart: state.cart.map(product =>({\r\n    ...product,\r\n    subtotal: formatPrice(product.price * product.amount)\r\n  })),\r\n  total: formatPrice(state.cart.reduce((total, product) => {\r\n    return total + product.price * product.amount;\r\n  }, 0))\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(CartActions, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport Cart from './pages/Cart';\r\n\r\nexport default function Routes(){\r\n\r\n  return(\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/home\" exact component={Home} />\r\n      <Route path=\"/cart\" component={Cart} />\r\n    </Switch>\r\n  )\r\n\r\n};","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport cart from './cart/reducer';\r\n\r\nexport default combineReducers({\r\n  cart,\r\n});","import produce from 'immer';\r\n\r\nexport default function cart(state = [], action) {\r\n\r\n  switch (action.type) {\r\n    case '@cart/ADD_SUCCESS':\r\n      return produce(state, draft => {\r\n        const { product } = action;\r\n        draft.push(product);\r\n      });\r\n\r\n    case '@cart/REMOVE':\r\n      return produce(state, draft => {\r\n        const productIndex = draft.findIndex(p => p.id === action.id);\r\n\r\n        if(productIndex >= 0){\r\n          draft.splice(productIndex, 1);\r\n        }\r\n      });\r\n    case '@cart/UPDATE_AMOUNT_SUCCESS': {\r\n      return produce(state, draft => {\r\n        const productIndex = draft.findIndex(p => p.id === action.id);\r\n\r\n        if(productIndex >= 0){\r\n          draft[productIndex].amount = Number(action.amount);\r\n        }\r\n      });\r\n    }\r\n    default:\r\n      return state;\r\n  };\r\n\r\n\r\n\r\n}","import { call, select, put, all, takeLatest } from 'redux-saga/effects';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport api from '../../../services/api';\r\nimport history from '../../../services/history';\r\nimport { formatPrice } from '../../../util/format';\r\n\r\nimport { addToCartSucess, updateAmountSuccess } from './actions';\r\n\r\nfunction* addToCart({ id }) {\r\n  const productExists = yield select(\r\n    state => state.cart.find(p => p.id === id),\r\n  );\r\n\r\n  const stock = yield call(api.get, `/stock/${id}`);\r\n\r\n  const stockAmount = stock.data.amount;\r\n  const currentAmount = productExists ? productExists.amount : 0;\r\n\r\n  const amount = currentAmount + 1;\r\n\r\n  if(amount > stockAmount){\r\n    toast.error('Produto fora de estoque no momento');\r\n    return;\r\n  }\r\n\r\n  if (productExists) {\r\n    toast.success('Produto adicionado com sucesso!');\r\n    yield put(updateAmountSuccess(id, amount));\r\n  } else {\r\n\r\n    const response = yield call(api.get, `/products/${id}`);\r\n\r\n    const data = {\r\n      ...response.data,\r\n      amount: 1,\r\n      priceFormatted: formatPrice(response.data.price)\r\n    };\r\n    toast.success('Produto adicionado com sucesso!');\r\n    yield put(addToCartSucess(data));\r\n    history.push('/cart');\r\n\r\n  }\r\n}\r\n\r\nfunction* updateAmount({id, amount}){\r\n  if(amount <= 0) return;\r\n\r\n  const stock = yield call(api.get, `stock/${id}`);\r\n  const stockAmount  = stock.data.amount;\r\n\r\n  if(amount > stockAmount){\r\n    toast.error('Quantidade solicitada fora de estoque!');\r\n    return;\r\n  }\r\n\r\n  yield put(updateAmountSuccess(id, amount));\r\n}\r\n\r\nexport default all([\r\n  takeLatest('@cart/ADD_REQUEST', addToCart),\r\n  takeLatest('@cart/UPDATE_AMOUNT_REQUEST', updateAmount),\r\n]);","import { all } from 'redux-saga/effects';\r\n\r\nimport cart from './cart/sagas';\r\n\r\nexport default function* rootSaga(){\r\n  return yield all([\r\n    cart,\r\n  ]);\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport rootReducer from './modules/rootReducer';\r\nimport rootSaga from './modules/rootSaga';\r\n\r\nconst sagaMonitor = process.env.NODE_ENV === 'development' \r\n? console.tron.createSagaMonitor() : null;\r\n\r\nconst sagaMiddleware = createSagaMiddleware({\r\n  sagaMonitor\r\n});\r\n\r\n// Reactotron configuration\r\n\r\nconst enhancer = process.env.NODE_ENV === 'development'\r\n  ? compose(\r\n    console.tron.createEnhancer(),\r\n    applyMiddleware(sagaMiddleware))\r\n  : applyMiddleware(sagaMiddleware);\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\n\n// Configuração para Reactotron\nimport './config/ReactotronConfig';\n\nimport GlobalStyle from './styles/global';\nimport Header from './components/Header';\n\nimport Routes from './routes';\n\nimport history from './services/history';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router history={history}>\n        <GlobalStyle />\n        <Header />\n        <Routes />\n        <ToastContainer autoClose={3000} />\n      </Router>\n    </Provider>\n\n\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n","module.exports = __webpack_public_path__ + \"static/media/background.3c9a1ce5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.879557c5.svg\";"],"sourceRoot":""}